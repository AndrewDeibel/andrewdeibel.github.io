//
// 12 unit grid system for responsive layouts
//

@for $i from 1 through 12 {
	.xlarge-#{$i}:not(.grid) {
		width: percentage($i/12);
	}
}

.grid {
	// Clear after grid to prevent float wrapping
	&:before, &:after {
		content: '';
		display: table;
	}
	&:after {
		clear: both;
	}
	// Set all columns to float side by side
	.col {
		float: left;
		@include transition(all, .25s, ease);
	}


	// Fluid/dynamic
	&.fluid {
		display: table;
		width: 100%;
		border-collapse: collapse;
		.col {
			display: table-cell;
			float: none;
			white-space: nowrap;
			&.static {

			}
			&.dynamic {
				width: 100%;
			}
		}
	}


	// Padding
	// From xsmall to xlarge create padding and negative margin
	$paddings: 32px, 16px, 8px, 4px, 2px;
	@for $i from 1 through length($sizes) {
		&.padded-#{nth($sizes, $i)} {
			margin: -(nth($paddings, $i));
			.col {
				padding: nth($paddings, $i);
			}
		}
	}
	&.padded {
		margin: -8px;
		.col {
			padding: 8px;
		}
	}


	// Row based grid
	// For all screen sizes wrap a max-width and for all col sizes generate percentages
	@for $i from 1 through 12 {
		&.xlarge-#{$i} .col {
			width: percentage($i/12);
		}
	}
	@for $i from 1 through length($screen-sizes) {
		@media (max-width: #{nth($screen-sizes, $i)}) {
			@for $ii from 1 through 12 {
				&.#{nth($sizes, $i)}-#{$ii} .col {
					width: percentage($ii/12);
				}
			}
		}
	}


	// Column based grid
	// For all screen sizes wrap a max-width and for all col sizes generate percentages
	@for $i from 1 through length($screen-sizes) {
		@media (max-width: #{nth($screen-sizes, $i)}) {
			@for $ii from 1 through length($sizes) {
				.#{nth($sizes, $ii)}:not(.grid) {
					width: percentage($ii/12);
				}
			}
		}
	}


	// Clearing
	// Responsive clearing when you need a certain column to new-line
	.clear-xxlarge {
		clear: both;
	}
	@media (max-width: $screen-xlarge) {
		.clear-xlarge {
			clear: both;
		}
	}
	@media (max-width: $screen-large) {
		.clear-large {
			clear: both;
		}
	}
	@media (max-width: $screen-medium) {
		.clear-medium {
			clear: both;
		}
	}
	@media (max-width: $screen-small) {
		.clear-small {
			clear: both;
		}
	}
	@media (max-width: $screen-xsmall) {
		.clear-xsmall {
			clear: both;
		}
	}
}


// Resonsive widths independent of grid
// For all screen sizes wrap a max-width and for all col sizes generate percentages
@for $i from 1 through length($screen-sizes) {
	@media (max-width: #{nth($screen-sizes, $i)}) {
		@for $ii from 1 through 12 {
			.#{nth($sizes, $i)}-#{$ii}:not(.grid) {
				width: percentage($ii/12);
			}
		}
	}
}
@for $i from 1 through 12 {
	.width-#{$i} {
		width: percentage($i/12);
	}
}